hey everyone welcome back this video will be just some more vocabulary uh hopefully it's not 12 minutes long like the last one but we'll do our best all right so these ones are there's not as many we brok it up into two categories this one first one is SQL so first we learned about uh SQL which obviously is program language used to uh it's by the way I never even mentioned this I'm horrible structured query language is what SQL means what that's what it stands for it's used to to uh connect to your database I sorry I just got distracted I was waving this paper and like my lens is like flashing for some reason anyways uh the next part was data definition language which is used to define it's part of SQL so SQL has data definition language and DML uh data manipulation language ddl is used to define the structure of our database data manipulation language is used to insert values in our database as well as uh update them delete values and search values and so forth the other thing was I never really mention this but I do want to mention it here SQL keywords so anytime we have the word keywords in a programming language it's talking about something that is reserved that you're not supposed to to use for your userdefined data so for example select an SQL this is a word that your database is going to recognize as okay we want you to do something we want you to select data it's a keyword because it's already defined so I wouldn't I don't want to name my tables or my columns any keywords cuz it can cause errors or confusion or just mix things complicated uh I always put SQL keywords in capital letters all right so that's pretty much all for the SQL uh here's my Eraser America and every other country all right presentation so the very first thing is we have the front end of an application so the front end is what the user sees uh the back end is what's going on behind the scene when we have a website we don't just have what the website looks like we have code that gives us that look when we put in data to forms we have languages that communicate with databases to create a easy to follow non-confusing front end but the back end is complicated as heck so that's the difference between front end and back end front end is what the any user at a particular time will see the back end is what's going on behind the scenes so often when we're working with databases we will program a front end because we don't want everyone accessing our server it's insecure and it's just not a good idea so we often create a front-end application to access our database most commonly a website although there's other forms but whatever so if here is our database rather than people signing into the server and using SQL code to get information we often program front ends for people to access this data in a different way so each one of these front ends would be like a website page for example so here would be a registration page here would be your users page here would be uh your profile uh your homepage here would be if you like you can even have different tier systems so this could be a page where the website administrator can add or delete users they have that extra privilege this is also the view system which we will talk about in a second well the front end doesn't allow us to directly type in our own SQL it only allows us to use what the the front end gives us which is then communicated to the database so that's what a front end end is the back end would be the server side code used to communicate with the database so when we when we're talking about clients and servers we have those two terms we have client and then we have server so very first thing is client client is uh think of it if we have this wall here over here we have a computer and then over here we have a database this is the client side because we're accessing the database over here is the server side so CL uh client side and then server side I don't really have room to write that but the server serves instances of this database to the client where they can access the data in some way depends on how we the the Privileges we give them so um when we talking about different privileges for different people we use what's known as a view so first let me finish this client side and server side and we communicate from the client side to the server side by a server side scripting or programming language oh that's huge now my hands tired we can give custom views so a view is just taking the data from the database and illustrating it in a different way than how it's actually stored for example a user on a website can visit let's say we're on like a social network and I visit my friend's page it'll tell me their their name possibly their username if that's what they use their date of registration uh their phone number if that's public for example anything like that their relationship status although information that is private may only be accessed ible to the user who owns it for example their password or their email or uh their friends list that might be a different view depending on what page you are on what page you are on and the user that you are so I may be able to access my own password and email but that might be private to other people that's the view um views often use join which basically connect data from multiple tables to create a new table if we have two tables here users table comments table can you see that can you see it you better be able to see it well a comment is always given by a user and we connect it using the ID it's called a foreign key connection well this ID let's say it's the ID of 25 right well instead of having okay this comment was by the person with the name uh with the user with the user ID of 25 we wanted to say Caleb Curry so we have a join taking the name from the user table and apply and connecting it with the comment of the comments table to get this new t uh generated table this is just a view it's not actually stored in the database like this we're just creating a new illustration of how the data really is stored and then we can have the name of the person followed by the comment or comments of that person you may be asking why don't you just use the name as a reference well that's because many multiple people can have the same name for example so we always need something that's unique for this Con connection whether if you don't want to use an ID you could use something like a natural key uh username for example but I often use IDs and we'll be talking about that more in upcoming videos so yeah that is all of the vocabulary that we have gone over so far pretty much uh if you have any questions about any of those just leave a comment I recommend that you write all those down I should have told you that at the beginning but anyways I recommend you write those down as well as the definitions study those learn them and especially study from the previous video study all the different terms that mean the same thing because um after a while you get kind of used to those terms but if you're just learning and you don't know that these are talking about the same things well then you can get confused very easily so I recommend you study all right a row is also called a tupple and is also called a whatever blah blah blah BL blah that will help you that way when I say whatever word it is you know what I'm talking about and you don't have to like check your charts or whatever or go watch other videos so that's something I definitely recommend that you memorize uh as well for the SQL stuff it's not as important like the DML ddl but I do recommend that you memorize all of these terms as well so thank you for watching if you enjoyed that please be sure to click subscribe and I will see you guys in the next video where we are starting something new new so yeah I'm excited hopefully you are too bye peace yeah yeah yeah wow