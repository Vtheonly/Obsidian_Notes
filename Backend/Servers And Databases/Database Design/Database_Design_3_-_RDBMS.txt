hey everyone welcome to your database design video uh this will be about database Management systems and because this series is over relational database design it'll be specifically relational database Management systems and we'll talk about the difference so first let's just talk about in general what is a database management system so this is often shortened to be dbm S for database management system and relational database management system is the same thing except it starts with an R so it be rdbms so I'm just going to write that because it's easier all right so where we left off in the last video we learned well actually like both of the videos we learned that a database can be used to store a ton of information so we have this database I just think of it like a barrel with a ton of information just piled in there so like usernames and like passwords and junk and transactions and all this stuff is listed in here and as you saw in the last video it looked very similar to a spreadsheet so what makes it different we have all this data now what do we do what do we do just look at it and no don't be a noob obviously we do cool things with it obviously so I don't even know what that was about so what we can do so we can run what's known as a query so at query uh just sort of like searching our data doing something with it and giving us cool results so a database management system uses our data and manages it allowing us to view it in a human friendly way and do cool things such as search for res uh values um change the appearance of data change the way data is stored and so forth so for example we have six billion users okay just for just for an example and we want to delete anyone who hasn't been active in a year well without a database management system all we have is a bunch of data and we'd still have to go manually do all that and delete all that so the database management system is what allows us to easily run a query all right select everyone who hasn't been online in a year and then we can delete it everyone who uh basic basically just delete everyone who hasn't been ACC uh active in a year basically a relational database management system is just a subcategory of a database management system a specific kind that is designed to work with relational databases so yeah not much of a difference there so it's just some of the things that these database Management Systems can do the first one is obviously run fancy query queries to give us specific results such as uh give us uh all of the TR transactions that were processed before 2011 June 10th that's something fancy we can do with a database management system uh it also allows us to change the way our data is presented that's something known as a view mechanism so basically a view mechanism allows us to change the surface appearance of our data so when when we store our values in our database we might have it to where it's we're going to store an ID we're going to store a username I'm just going to shorten these up to make it easy we're going to store a username we're going to store a password we're going to store an email and then we're going to store street address uh state city so forth but let's just say this is how it is for now here is the actual table structure for the user table so here are all of our attributes for a user I'm going to get rid of this so it's clear well with a view mechanism we're able to to get different views of this data at the surface level so for example if uh we had two people accessing this data one uh let's just name him Jim and the other one let's just name her Jame e Jamie yeah Jim and Jamie let's say Jim he doesn't really care about the emails because all he's working on is to find out information about usernames and passwords so what he might do is he might create a new view of just the username and the password once again I'm just shortening these just to make things simple for illustration I probably wouldn't put them in the database like that unless you wanted to but whatever so this is a specific view we can select the username and the password but the internal structure of the data has not changed this is still how it's stored within the database Jamie on the other hand she cares about the ID and the email so she creates a new view just like that so this these are both called views so the view mechanism allows us to create different views this can be used for database administrators as well as for other applications such as when we have a web page we may want we may only want use users to be able to access their username password and email but stuff such as the U the date they registered that might be all private on the database so then we can just create a view giving them the information that they have access to and that is a layer of security so basically if we have a huge database for a business well the database ad administrator is going to have access to it all the president of the company will probably have access to all but the people who are advertisers they probably only need to know information about advertising the the people who monitor uh comments on your website they're not going to need access to the sales and the transactions they're going to need access to the the table for comments that's a security feature that a view mechanism allows us to do by giving different views so not every single person who uses the database has the privilege of creating a new view just because you can access the database does not mean you can do things such as update data change the way it's structured and so forth that is probably something only the administrator or the owner of the business is going to be able to do that means we can allow users on websites they can can only ask they can only access their specific username and password they can't access everybody's username and password only theirs but if this guy uh Jim who is hired at the company he can access the user name and password of every single user that's a security difference difference between the two people not allowing the user of the website to get too much information and at the same time not Li liting gym to F too little information so that is a really good security feature all right so what else um a relational database management system allows us to do transactions which we'll be talking about as the time comes basically a transaction is what it sounds like is when we do something with the data that um for the technical terms basically it is either complete all the way or it doesn't work at all if we have a multiple step thing such as transferring money to an account deducting that much money from the other person's account so forth updating the data boom saved if at any time the power goes out and the server crashes and it doesn't complete well then the transaction is cancelled nothing is saved that's something you can do with a relational database management system so that's pretty much the basics of relational database management system uh just in case you're not not really sure of like the terms and stuff examples of relational database Management systems or just database Management Systems MySQL is one it allows us to build and run a database um SQL Server is one basically like the micros if you like Microsoft it's run on the server and then you access it so you we have Microsoft server uh we have Oracle database we have I don't even know how to pronounce it like postr SQL or something um and so forth the list goes on but basically all of the big terms that you hear in databasing they're referring to the relational database management system or the database management system if it's not a relational database don't really don't really think of the database and the relational database as two separate things they are they're used as one but if you do want to be like conceptual about things we have the database which stores the information and then the relational database management system which allows us to manipulate that data when we have something such as MySQL we don't really have a difference between these two and everything's just kind of like okay we use MySQL to create the data it's stored MySQL is kind of like all we do the actual files they're stored on hard drives on a server or your home computer wherever you're running your database from and the relational database management takes the data on the hard drive and puts that into presentable tables for people to like the administrator to view because if we have like a hard drive disc let's just say this is a hard drive disc and um some of the data is going to be stored like right here other parts of data is going to be stored like right here and some right here well if this is a table the relational database management system is going to be able to take that and put that in the appropriate location to make it presentable so don't really think of it like oh we have a database and then a relational database management system let kind of think of them as one and whole in themselves so we just have like MySQL the other thing finally I know I'm kind of running Along on this video the other thing a relational database management system is going to do is it's going to create uh consistency I need a bigger piece of chalk here consistently it's going to make consistency behind um for the front end so on a website we could have someone put their full name in one box and that can be stored on a database as two separate columns first name last name well let's say if uh we updated this and we decided to make it one column for some reason which I don't recommend well the front end didn't change because the only thing that changed is the back end with a database we can have consistency on our front end to make our users happy never having to worry about things changing on the back end though things can change for example the way we store dates or our time zones or our character sets well that's generally that's not going to affect the front end unless the data on here is directly affects the front end for example if this is a username column and we delete the username column well that's going to cause issues because it's not Callum on the database but basically when we have a database the front end is generally consistent as well as we have um server side scripting languages such as PHP or whatever else well that is going to hide our database an even even step further so basically rather than saying oh there's no username column it'll say something like error try again later something very vague so people don't understand like oh crap I can hack this guy because I know his database structure I can figure out how to mess up his website or his business or whatever so yeah that was a serers side scripting language I'm not going to write that out because it's huge but yeah that is the basics of relational database management system hopefully that was helpful and in the next video we'll be talking about the basics of SQL which is a language used to communicate to a relational database management system so thank you for watching be sure to subscribe and I will see you in the next video