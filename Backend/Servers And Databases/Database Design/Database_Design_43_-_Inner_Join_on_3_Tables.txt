yo this video we'll be discussing inner joins across multiple tables so you're probably wondering okay what does that mean well when we have a join We join multiple tables but what if we want to join that join of multiple tables with more tables so basically we're going to have a join over three or more tables I'm trying to find my green marker I can't find it there it is okay how does this work well let's just draw some boxes just kind of get an idea of how this might look okay so you may be like okay cool we figured out inner joins and how those work but how do they work when you have three tables let's let's find out here we have three tables and when we do an inner join let's say in the last example we joined these two tables we had some kind of join condition which was something like customer do customer ID equals card. customer ID you know well it doesn't always have to be that it just depends on what you're doing with it but basically you're going to have a join condition right here and you're also going to have a join condition right here if you want to join in another table these tables don't necessarily have to be uh connected like a a many to many relationship cuz when we designed many to many relationships it looked like this with like the intermediary table it's not always the case for example this table could have a relationship with this table and this table could have a relationship with this table but this table doesn't necessarily have to have a relationship with this table think of it like this when you do the join on these two tables you're going to get a result set right then if you want to know what your next results are going to be when you add this table in think of joining these and you're going to get a final result set so if you do an inner join across multiple tables the end result set is going to be smaller than this because you think about it if you join these two tables you get a result set but now you have to take all of these rows and you're only going to display the ones that meet the requirements of this join condition which is going to decrease the size or the amount of rows in this table and it's going to be shorter most cases now let's talk about this a little more let's go through the example we had before with the cards and the customer but we're going to add a new table right so we just going to draw this out a little bit this is the customer table and we had a customer ID a first name last name you can also have any other junk you want to store about the customer in there then we had the card table we had the card card ID and then the customer ID and then the like max amount or whatever else you want to store about the card or the bill or whatever the price or the interest rate now let's throw in another table in this equation let's throw another table into this equation it's going to be a card type table so you know when you get like a credit card cuz all you college students students are like yeah I need pizza well there's that card has a type such as Visa Mastercard or whatever else uh American Express well that's kind of like the card type generally a bank would just give out like one card type but we could say that they can like we could just say what kind of card type the card in this table is now when you structure it that way how many different card types are there four five main ones Visa Mastercard American Express maybe two other ones that are somewhat popular there's not that many so if you were to store that in a column in this one you're going to get a lot of repeating data and then for example if Master Card decides to change their name or they get bought out by somebody else and all the cards now are named Ultra card than that's going to cause problems because all of the um you're going have you're going to have a Master Card and then Ultra card it's going to be confusing so what you can do is use a lookup table which we discussed in a long video ago and that's just going to be basically a reference to another table with all the possible options and that way if you need to add a new Option you can do that easily and then just reference that or if you need to update an option or if you want to put extra information up about that option for example if Master Card has a standard fee or something you could put that within the card type table rather than within the card table because if you have the card table like look if you have card ID and then you have card type and then you have something about that card type so card type interest or something well this is a transitive dependency which is a violation of the normal forms I believe second normal form did I forget third normal form I'm sorry anyways that's not good so you'd want to take these and put them in a new table so a lookup table is a defense against problems like that and it also reduces uh Integrity problems and it can also reduce repeating values so now let's Design This we're going to have a lookup table which is card type and this is going to have card type ID and then the card type which is going to be like the name of it and then you could have any other rows about the card type in there and then in the card we're going to reference that with the foreign key so it's just looking up the values through the through the uh lookup table so we're going to have C card type ID that is a Ford key now let's draw these connections customer ID is a foreign key to the customer and the card type ID is a foreign key to the card type so you can see we have all this information spread out over three tables and we want to uh add a we want to join these and create a new generated table that contains information from all three we want it to be an inner join in this case but you can do the same thing with outer joins and other types of joins we'll be discussing this soon but for this we want it to look like this this is what we want our generated view or our new table to look like we want to select stuff about the customer just add some columns in there just to put them in here we could have um the first name last name email phone amount paid and then we could also have the card type right here need some more room here guys want to know something cool while we're completely off topic just for a second I always like Drew Comics as a kid and I always like drew a a bubble around like a either a thought or a talk and then I try to fit all the words into that that it never worked and then my master drawing friend was like dude draw the words first and then draw the bubble around it it was like the best idea ever but I still don't do it I mean I always have to erase the sides of my database tables to fit more junk in there I should always write the words first and then draw a square around them but this will work these are all from this table this is from this table the card type is from this table it's a joint across three tables and you could have of course add more now the join conditions well it would be for this the customer ID is the same as the customer ID and the card type ID is the same as the card type ID so this table first is going to exclude here I'll just write out what it's going to exclude this isn't part of the table but I'm just putting it here it's going to exclude uh customers with no card cards with no customers that's going to be the first join condition because we're going from here and then the second join Condition it's going to remove cards with uh no card type and also card types with no cards and that means basically if you have Master Card as a card type and you haven't created any card rows that also have the forign key that references Master Card or whatever I said then that's not going to be included because there would be nothing to put with it and just say Master Card n n n n n that's because no cards have it and no people have cards that have it so that's what inner join is going to do it's going to do all this so the end result is going to basically get smaller and smaller and small smaller for every single table you add now there's a couple other things to think about here it has to do with things being n or Not N okay let's let's talk about it the way we have it set up is the customers they can have a card but they don't have to have a card that's because there's no required column in here that says you have to have a card ID so you could have a customer that has multiple cards for example we also have a card table and the way we have it set up the card doesn't necessarily have to have a customer if you want to change that you could take this customer ID right here and you could make it not null that is going to change the end result because now every single card is going to have to have a customer that means cards with no customers although functionally it's removing all the cards with no customers every single card has a customer so the end result doesn't eliminate cards with no customers functionally it does though because that's what the inner join does but since there's none to remove it doesn't do anything so you can kind of think of it as not doing this even though functionally does remember that it's a difference all right now we also have it where the card I would say it should have a card ID or a card type Ida I should say because almost every card you're going to get ever is going to have a card type right unless for some reason they wouldn't you'd likely have that as not null so functionally this is going to remove cards without card types but since it's labeled as not null every single card is going to have a card type therefore in the end result it doesn't really remove cards with no card type because every card has a card type so there's nothing to remove Now card type there might be a possibility you're offering a new card type such as let's say I can't think of any cool names like legit card type 12 and like a new company comes out and they you get a legit card type 12 card and all through your new bank account and that might you when you first get that there might not be a card that has been issued that card type yet so in the end result you're only really removing the customers with no cards and um I guess the card types with no cards I'm going to keep that so that's going to stay so these two are going to be removed and this is the end result here we're going to keep card types with no cards and customers with no cards that was a big one man my throat hurts okay but that's about all guys so if you understood that good job because I don't thank you for watching and be sure to Subs subcribe