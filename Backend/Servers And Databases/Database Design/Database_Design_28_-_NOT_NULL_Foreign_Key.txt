hey what's up everyone welcome back to your database design Series this video I wanted to talk a little bit more about foreign keys and a characteristic known as not null all right so this this keyword here might vary from relational database to relational database but it's probably something similar to this not null which we learned about null and we talk about this over here it's basically saying you uh the database will not accept someone not answering that column for example so if it's not null you have to give that column a value every single row so the rows are each individual entry within the table if you have the column characteristic of not null for every row it's going to be required that it has a value so think of like a fax number does everyone have a fax machine no most people don't so if I said it as not nle and I didn't give it a fact number then it would throw an error and cause problems that's that's an example of how not works now this is important when it comes to forign keys because it has to do with what's known as uh cardinality which we'll talk about that when we start designing databases a little more but it's basically whether or not a relationship is required so this is going to dictate what kind of values we can put within our table back to the fax machine if we have it to where it's not null that means every single value I mean every single row has to have a value that also means that if someone doesn't have a value they might not be able to put any information in this table so by putting this restriction you are eliminating all all rows that aren't going to have a value you're preventing them from happening you see what I mean yeah so if the case is where you do want people who don't have fax machine numbers to be able to enter data into your table well then you would not want to use not null as a characteristic because that's going to prevent them from doing that now this is important when it comes to foreign keys because if we require a relationship we set it as not nor and that means every foreign key value for that column every single row is going to have to have a relationship for that so one of the biggest differences between primary keys and foreign Keys is that primary keys are required all of the time never changing never null right drop my chalk dang it ah all right well foreign keys are a little different because we can have them to where they're not required they can be empty because sometimes that relationship is not there or they could update like uh we could we could have um a a new relationship in this table which we want we don't we want to eliminate as much possible updates as possible but sometime that's required and that's why we use foreign keys to keep things connected so when things are updated they update across the platform now we don't want the primary key key values to change but we could have the foreign key references change for example let's say we have a table over here all right and we'll just have it we'll be we'll have it be cars okay or we'll just have it a car right and we have two rows and we have a car with the IDE of six and a car with the idea with the ID of 10 right and we have this guy over here and we have a table for him we'll just make it the user table and let's say for some reason we wanted to make a connection of what car he owned well he might currently own six right and we don't ever want the value of six to change and still be talking about the same car let's say this car is this one over here this is some flames right and this one over here we got a legit car boom right so these are two separate cars 10 talks about this car six talks about this car we don't ever want it to happen to where this number gets updated eight or we change the primary key and it's still referring to the same exact car because then we have a changing primary key but with forign keys it can change in the sense that oh I no longer own this car now I own this car so we didn't have any primary Keys updated but the foreign Keys which would be this connection right here did update all right so that kind of is a little bit of a difference between primary keys and foreign Keys primary key value should never change foreign key values can change because references change hopefully I didn't just lose my train of thought I think I think I'm going but kind of hit in a blank here for a sec okay so let me just illustrate this in a college right one of the important things between these tables that have a primary key and a foreign key connection to that primary key is that they have to be of the same data type which is the type of data whether it be int or a character or date and um basically it has to have all the same characteristics like the collation or the character set or the um storage engine now the only thing that can vary is the not null characteristic because if we have the primary key over here well we know that the primary key is never null so we always have not null for the primary key I'll just put NN for sure the foreign key on the other hand it's not always required to have a connection for example in that previous example we had the P the user table we had this guy over here and then we have this car table of the car that the the user owned right he could have one car right well he might not currently own a car therefore we don't have a connection to this table therefore this connection is optional or not required yeah that doesn't even look like English but close enough so let's think of a another example it's if we have a college well we we might be in early in the semester where every single class before people have registered every single class doesn't have an instructor yet and we're still trying to find an instructor although we know that's the class that we want to have so that means we have an instructors table we'll have the instructors over here and we have a class table a class table is going to have a for and key pointing to the instructor for the instructor of that class unless the case of a many to many where multiple instructors can teach multiple classes then we would need an intermediary table but that is not the case here you need to learn more about that check my relationships video but for now we would have a a class ID and an instructor ID right and then over here we have an instructor ID as it says ins instructor close enough right now this is going to be a reference to this over here now what kind of values is this going to accept let's give some examples let's say we have uh here's a row we have the class ID 7 the instructor ID 83 and we'll add a column we'll make it the name of the class we have a column and it's a math right and then we can have another uh value within here I think I'm off screen now then we can have an instructor over here his name his ID could be seven and his name could be Jake right so this class ID is seven here let me change this it's GNA get confusing let's make this 16 all right so this class ID is seven and it's by an instructor 8 which we don't actually have a over here yet so that means we either have another row or we have an error which because we never want that to happen so let's say we have another class got any room okay we have another class over here and it's its numbers is eight and it's taught by Caleb right so now we have an instance of a class we got the class ID 7 the instructor ID 8 and the name math so the instructor ID points to this this instructor over here here this is the parent I'm sorry this is the parent this is the child because this is a foreign key reference to the parent so that means this uh relationship is a foreign key now with the not null thing if we made it to where it's not n if we added the characteristic not null well that means this row is going to have to have a value for the instructor ID that means every single value for instructor ID is required what does that get rid of that means it's impossible to put a class in this table that does not have an instructor ID that could cause a problem if you have a class created but you don't have an instructor yet or if the instructor drops out and you have to find a new one so so this one might be a bad time to use not n if we got rid of that well now we could have a class with a primary key but no foreign key connection now we have a class with the idea 7 and it's meth and the the current teacher we don't have one and we still have this guy over here he's not teaching that class but he's still in the system Jake's still in the system the class is still in the system that is a good good example so for this one not null might not be the best idea other examples having not null would be a good idea because it forces that relationship to be there here let me think of another quick example real quick quick example real quick if we had uh two two entities we had a card for a credit card company so we had the card and then we had the person holding the card so the person who bought the card or was getting the card from the bank and he's using it to buy their groceries and their gas and they're ranking up thousands of dollars in debt well that person would have a relationship with this card because he's the card holder that's the card now if if we had a table for this we'd probably have a card table and we'd have a person ID which would reference the person table right if we set this to not null that means every single value or every single row within this card table is going to require a card owner if we had if we got rid of this that means we could have cards in here that were outdated that don't currently have an owner because there's no connection we broke that owner or new cards that haven't been G given out yet so if you want this table to just be for cards that currently have an owner so we could have it owned cards well then we could have a a notnull column with the same data type as person ID and now every single value is going to have a person ID does that make sense so that's kind of the introduction of not null and how that works with foreign keys and how sometimes you will want them to be not null and other times you want them to be nullable or not required so yeah that is uh some good stuff right there so be sure to study all that and understand all of that because it's really important if you have any questions leave me a comment and I will try to get back to you thank you and see you guys in the next video subscribe