hey guys what's up uh before we start the many to many relationship design I wanted to talk about parent child relationships so we have uh when we design these relationships a table is always the parent and a table is always the child and uh when we're talking about keys keys keep things unique and they always they're they're used to connect tables that are related so every T table has a key that keeps keeps it unique when we create a foreign key it references that primary key in another table so the primary key is the parent the foreign key is the child the child points back to the parent it inherits the values from the parent for example uh the parent's ID is 86 then the foreign key pointing back to the parent is 86 it's the child so in a one in a one toone relationship where we just store everything in one table which is the most practical way to do things we don't have to worry about primary keys or foreign Keys we just have one table and that's all we have then we have columns within this table so we have the user ID the password the username the the whatever else all those are just columns within a table we don't have to worry about a parent or a child because we're not making any relationships across multiple tables but when we get to one to many that's when we have this table pointing or has uh many children so you would say this is the one side it's the parent then we have each of the parents children these all point back to the parent with a foreign key so if you think of like comments on a YouTube video every comment has a poster or a a user account of a person who clicked post a comment that means that the commenter is the parent and the comment is the child another way to think about that is if you if you were given a comment on YouTube you can figure out who posted that comment that's because the child always points back to the parent now if you look at a user account on YouTube such as Caleb the video maker 2 awesome Channel check it out and be sure to subscribe well you don't necessarily know every single comment that that parent has given there might be a feed in there that says recent comments but when we look at the child we always know the parent because it inherits the values but the parent doesn't inherit anything from the child think of like in real life you can see a married couple and you don't know if they have children or not but if you see a little baby will you think all right they that that baby has a parent or parents that's the similar idea with database design think of this wall here between the parent and the children the children inherit values from the parent such as the forign key 87 that tells us who the parent is that is important I know it seems like okay who really cares who's the parent or child just get on with the database design you Noob I'm going to unsubscribe well this is important because when we get to understanding how to design each relationship we need to understand where we put the foreign key which table does the foreign key go into that is decided by the child because the child always has the forign key that points back to the primary key so user ID primary key user ID foreign key points back to the primary key user ID so foreign Keys always go in the children primary keys go in the parent when it comes to many to many relationships we have problems with parent child relationships and that is why we can't store many to many relationships in a database and that's what we're going to talk about in the next video when we talk about many to many relationships specifically but just know that when we have an entity think I want you to think of whether or not it would have a parent a lot of the times it would but other times not so much but if you think of think of an order for a store an order needs a parent because an order is when you buy product who is buying it someone has to buy it otherwise it wouldn't it wouldn't exist the child would not exist without the order so let's let's re look at this this is the the user and this is the orders we can't have a child child without a parent logically it just doesn't make sense so if there is no parent of the order the order cannot exist we need to keep that connection an order needs someone who bought that order hopefully that's kind of making sense so yeah just keep in mind parent child relationships I'm not trying to repeat myself but I'm trying to repeat myself so you get this drill in your brain foreign key goes on the the child primary key goes on the parent and soon we'll be talking more in depth about keys so just for now memorize primary key and foreign key primary is the user ID the foreign key is a reference to that user ID it's in a foreign table and it points back to the original table so yeah that's all I have to say thank you for listening to me ramble and I will see you in the next video peace and subscribe