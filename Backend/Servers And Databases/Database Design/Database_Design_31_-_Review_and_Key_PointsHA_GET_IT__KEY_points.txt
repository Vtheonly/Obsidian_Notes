hey everybody this video is just going to be a quick review I'll actually be using my notes here just to make sure I get the main everything because I'm not going to try to memorize like 10 videos of content that's just crazy crazy I tell you all right but anyways first thing we started with was super keys so super key was just any number of columns that uh make ensure uniqueness within a table so we have super key which I still don't know why that's only one word which just confuses the heck out of me so someone please explain that then we had a candidate key now the difference between a Super Key in a candidate key is that a candidate key is the least number of columns used to enforce uh uniqueness now you can all you can have multiple candidate keys if you like a certain group uh so if that and that's the case you have to pick one as your primary key the primary key is the one you select as the uh the main key for your table all the other ones you can assign as alternate Keys which if that's the case they still can be unique you can still enforce uniqueness upon those but they're not used as the main key within your table all right what else all right well then there's um that's pretty much the all the ideas with finding a primary key and then when you reference that in another table you have what's known as a foreign key foreign Keys reference a primary key it's a connection that's how you make connections between tables if you have a user a user table and then you have a a comments table well the comment is posted by a user so you can reference that user in that comments table and we talked a lot about that so I'm pretty sure you guys got that pretty well now this is pretty much all you got to worry about for primary keys and foreign Keys you just got to worry mainly about these two these ones are less important about finding and figuring out these two are essential I'm I'm not saying these aren't important they're important but really defining a Super Key is kind of pointless when you know there's the candidate key you don't have to say Okay well all of these Define uniqueness that's one that's one super key all all of these Define uniqueness that's another Super Key oh finally we're down to the the correct size for a candidate key that's our candidate key and then I'm I'm check marking by the way just so you know what that is and then oh okay we got total of 10 candidate Keys five Super Keys now let's find a good primary key oh this one looks nice we'll use that one we'll set the rest as alternate Keys that's just complexity that is unnecessary when it's easier just to say oh there's a candidate key it's already the smallest that we need we'll use that as our primary key and now let's see if we have any other alternate Keys oh we don't have any good ones oh too bad that's fine who really cares oh we do have some good ones oh yeah let's set those as an index and make sure they're unique and we'll use those for some searching later on that's an example of how you would find a primary key you don't have to make this manual labor for like 20 hours to figure out which primary key to use all right then you reference that primary key in another tables foreign key so that's why these two are the most important foreign and primary those are the two you should focus on the most and memorize okay the alternate candidate super and they're kind of important but not as important all right so let's take a look at primary for let's just uh let's clear this out for a sec oh God all right Prim now there's some categories dude I dusted now it's like can't even breathe there's some categories of keys that we can talk about so the first one was surrogate in natural so surrogate and natural Keys a surrogate key is just a random number that has no real world value or no real world meaning just like an ID user ID student ID uh college ID classroom ID uh store ID sale ID record ID song ID picture ID whatever ever you want it to be I don't really care as long as it's an ID and it's a surrogate key then yeah yeah yeah I don't know what I just did there but anyways natural is something that's already naturally in the database and you just Define it as your key now typically when you want to use keys in your database which you will because it's your relational database you will pick either surrogate or natural keys and you'll use them for throughout the rest of the database you're not going to switch from surrogate and natural you're not going to be like oh this one is a natural key we'll use natural but this one doesn't we'll make it surrogate that's a bad design you should be able to enforce uh uniqueness by The Columns that are already there and then you can add a surrogate key if that's what you want to do and if by any chance you cannot possibly Define uniqueness without a surrogate key you're pretty much required to use the CC key but that situation should try to be avoided but there's times when you literally cannot find a natural key that will be sufficient so you guys kind of follow what I mean circuit Keys random numbers natural keys are already in the table boom simple all right speaking of simple we'll talk about the simple key all right so we got simple we got uh composite and compound okay so simple is basically a one column key composite and compound are multiple column Keys we talked about those in the previous video I believe uh yeah so that's pretty much all the categories of keys uh the when you define your primary and foreign Keys you're not going to have to specify if it's a surrogate natural simple composite or compound this is for our sake to design the best way because for example do you want to use composite keys or do you want to use Simple Keys that's a good question if you decide you want to use Simple Keys which by the way surrogate Naturals kind of thing you do throughout your entire database you can kind of switch back and forth from simple and composite for example you could have a users table and we could have a a like a sorry students table a class table and then we could have a an enrollment table with the students taking certain classes we could use a comp a uh we could I guess we could use a compound for this table and then we could use Simple for these tables that's something you can do but you should still use either C or natural just pick one and use it throughout your database hopefully I'm not talking too fast cuz I'm going pretty quickly if I am just let me know I just need to calm a couple inches calm down a couple uh decb cuz kind of hyper okay now the other thing we talk about is foreign keys and foreign key constraints well the main kind of foreign Keys the main kind of foreign key constraints were on update and on delete these protect our integrity of our database you define is whenever you make a table when you when you use the create table statement or uh create or whatever your relational database management system does to create tables the chances are you're going to say that you have a foreign key I'm just going to put FK for short and then you have a constraint and you can usually name that constraint so you could be like blah blah blah name it whatever and then we could say on update or on delete and the options were the ones I taught you were uh do nothing or basically throw an error or we could update the children or we could basically get rid of the value for the children so that would be um restrict Cascade and set null but your relational database management system might use something a little bit different which is fine yeah that's that's about it uh yeah yeah it's pretty much it yeah cool cool all right so yeah that's the summary of keys so yeah that was a T of stuff compared to my other database design video I had a video over primary keys and a video over foreign Keys boom done this one I had like 10 videos all right see you guys in the next video where we will be talking about something new sweet see you guys then